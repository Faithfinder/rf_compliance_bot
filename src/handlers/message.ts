import * as Sentry from "@sentry/bun";
import { Keyboard } from "grammy";
import { bot } from "../config/bot";
import { formatChannelInfo, checkChannelRequirements, formatChannelRequirements, checkUserChannelPermissions, escapeMarkdown } from "../utils";
import { getChannelSettings } from "../db/database";

export function registerMessageHandler(): void {
    bot.on("message", async (ctx) => {
        const userId = ctx.from?.id;

        if (!userId) {
            return ctx.reply("–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\\.");
        }

        const channelConfig = ctx.session.channelConfig;

        if (!channelConfig) {
            return ctx.reply(
                "–í—ã –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ –∫–∞–Ω–∞–ª\\.\n\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setchannel <@channel –∏–ª–∏ ID> –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\\.\n" +
                    "–ü—Ä–∏–º–µ—Ä: /setchannel @mychannel",
            );
        }

        const permissions = await checkUserChannelPermissions(channelConfig.channelId, userId);

        if (!permissions?.canEditMessages) {
            return ctx.reply(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª\\.\n\n" +
                    '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è" –º–æ–≥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞\\.\n\n' +
                    "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —ç—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ\\.",
            );
        }

        const channelSettings = getChannelSettings(channelConfig.channelId);
        const foreignAgentBlurb = channelSettings?.foreignAgentBlurb;

        if (!foreignAgentBlurb) {
            const requirements = await checkChannelRequirements(channelConfig.channelId);

            let errorMessage = `‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –ë–ª—É—Ä–± –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è ` + `${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n\n`;
            errorMessage += `üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n` + `${formatChannelRequirements(requirements)}\n\n`;
            errorMessage += `*–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:* –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`${escapeMarkdown("/set_fa_blurb")} <–≤–∞—à —Ç–µ–∫—Å—Ç>\` –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞\\.\n\n`;
            errorMessage += `–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\\.`;

            return ctx.reply(errorMessage, { parse_mode: "MarkdownV2" });
        }

        const messageText = ctx.message.text || ctx.message.caption;

        if (!messageText || !messageText.includes(foreignAgentBlurb)) {
            let errorMessage = `‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞\\.\n\n`;
            errorMessage += `üåç *–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç:*\n` + `${escapeMarkdown(foreignAgentBlurb)}\n\n`;
            errorMessage += `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞\\, –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∫ –≤–∞—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É\\.`;

            return ctx.reply(errorMessage, { parse_mode: "MarkdownV2" });
        }

        try {
            await ctx.api.copyMessage(channelConfig.channelId, ctx.chat.id, ctx.message.message_id);

            return ctx.reply(
                `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ ` + formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle),
            );
        } catch (error) {
            console.error("Error posting to channel:", error);

            Sentry.withScope((scope) => {
                scope.setContext("channel_post", {
                    user_id: userId,
                    channel_id: channelConfig.channelId,
                    channel_title: channelConfig.channelTitle,
                });
                scope.setTag("error_type", "channel_post_failed");
                Sentry.captureException(error);
            });

            const requirements = await checkChannelRequirements(channelConfig.channelId);

            let errorMessage = `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ` + `${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n\n`;
            errorMessage += `üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n` + `${formatChannelRequirements(requirements)}\n\n`;

            if (!requirements.channelExists) {
                errorMessage +=
                    "*–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:* –ö–∞–Ω–∞–ª –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø\\. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞\\, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª\\.";

                const keyboard = new Keyboard()
                    .requestChat("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª", 1, {
                        chat_is_channel: true,
                        bot_is_member: true,
                    })
                    .text("/removechannel")
                    .resized()
                    .oneTime();

                ctx.session.awaitingChannelSelection = true;
                return ctx.reply(errorMessage, { reply_markup: keyboard });
            } else if (!requirements.botIsAdded) {
                errorMessage +=
                    "*–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:* –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∫–∞–Ω–∞–ª\\.";
            } else if (!requirements.botCanPost) {
                errorMessage +=
                    '*–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:* –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ—Ç—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ "–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è"\\.';
            }

            errorMessage += "\n\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setchannel –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä—É–≥–æ–≥–æ –∫–∞–Ω–∞–ª–∞";

            return ctx.reply(errorMessage);
        }
    });
}
