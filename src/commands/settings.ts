import { b, fmt, i } from "@grammyjs/parse-mode";
import { bot } from "../config/bot";
import { getChannelSettings, updateChannelSettings } from "../db/database";
import { checkUserChannelPermissions, formatChannelInfo } from "../utils";

export function registerSettingsCommand(): void {
    bot.command("set_fa_blurb", async (ctx) => {
        const userId = ctx.from?.id;

        if (!userId) {
            return ctx.reply("–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
        }

        const channelConfig = ctx.session.channelConfig;

        if (!channelConfig) {
            return ctx.reply(
                "–í—ã –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ –∫–∞–Ω–∞–ª.\n\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setchannel <@channel –∏–ª–∏ ID> –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n" +
                    "–ü—Ä–∏–º–µ—Ä: /setchannel @mychannel",
            );
        }

        const args = ctx.match;
        const isViewMode = !args || typeof args !== "string" || args.trim() === "";

        if (isViewMode) {
            const channelSettings = getChannelSettings(channelConfig.channelId);

            let message = fmt`‚öôÔ∏è ${fmt`${b}–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞${b}`}\n\nüì¢ ${fmt`${b}–ö–∞–Ω–∞–ª:${b}`} ${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n\nüåç ${fmt`${b}–¢–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞:${b}`}\n`;

            if (channelSettings?.foreignAgentBlurb) {
                message = fmt`${message}${channelSettings.foreignAgentBlurb}\n\n`;
            } else {
                message = fmt`${message}${fmt`${i}–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ${i}`}\n\n`;
            }

            message = fmt`${message}–ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n/set_fa_blurb <–≤–∞—à —Ç–µ–∫—Å—Ç>`;

            const entities = message.entities;
            return ctx.reply(message.text, entities.length ? { entities } : undefined);
        }

        const permissions = await checkUserChannelPermissions(channelConfig.channelId, userId);

        if (!permissions?.canManageChat) {
            return ctx.reply(
                "‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n\n" +
                    "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞.",
            );
        }

        const newBlurb = (args as string).trim();

        if (newBlurb.length === 0) {
            return ctx.reply("‚ùå –¢–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç.");
        }

        updateChannelSettings(channelConfig.channelId, { foreignAgentBlurb: newBlurb });

        let confirmMessage = fmt`‚úÖ –¢–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\nüì¢ ${fmt`${b}–ö–∞–Ω–∞–ª:${b}`} ${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n\nüåç ${fmt`${b}–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞:${b}`}\n`;
        confirmMessage = fmt`${confirmMessage}${newBlurb}`;

        const entities = confirmMessage.entities;
        return ctx.reply(confirmMessage.text, entities.length ? { entities } : undefined);
    });
}
