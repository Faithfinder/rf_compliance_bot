import { bot } from "../config/bot";
import {
    formatChannelInfo,
    checkChannelRequirements,
    formatChannelRequirements,
    checkUserChannelPermissions,
} from "../utils";
import { getChannelSettings } from "../db/database";

export function registerInfoCommand(): void {
    bot.command("info", async (ctx) => {
        const userId = ctx.from?.id;

        if (!userId || !ctx.from) {
            return ctx.reply("–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
        }

        const channelConfig = ctx.session.channelConfig;

        let infoMessage = "ü§ñ *–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞*\n\n";
        infoMessage += `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* ${ctx.from.first_name}`;
        if (ctx.from.username) {
            infoMessage += ` (@${ctx.from.username})`;
        }
        infoMessage += `\nüì± *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* \`${userId}\`\n\n`;

        if (channelConfig) {
            infoMessage += `üì¢ *–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª:*\n`;
            infoMessage += `${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n\n`;

            const requirements = await checkChannelRequirements(channelConfig.channelId);

            infoMessage += `üìã *–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:*\n`;
            infoMessage += `${formatChannelRequirements(requirements)}\n\n`;

            const channelSettings = getChannelSettings(channelConfig.channelId);

            if (channelSettings?.foreignAgentBlurb) {
                infoMessage += `‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞:*\n`;
                infoMessage += `üåç –¢–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞: ${channelSettings.foreignAgentBlurb}\n\n`;
            }

            const userPermissions = await checkUserChannelPermissions(channelConfig.channelId, userId);

            if (userPermissions) {
                infoMessage += `üë§ *–í–∞—à–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:*\n`;

                if (userPermissions.isMember) {
                    infoMessage += `‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞\n`;
                } else {
                    infoMessage += `‚ùå –ù–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞\n`;
                }

                if (userPermissions.isAdmin) {
                    infoMessage += `‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n`;
                    if (userPermissions.canPostMessages) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n`;
                    if (userPermissions.canEditMessages) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n`;
                    if (userPermissions.canDeleteMessages) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n`;
                    if (userPermissions.canManageChat) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º\n`;
                    if (userPermissions.canInviteUsers) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n`;
                    if (userPermissions.canPinMessages) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n`;
                    if (userPermissions.canManageTopics) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–º–∞–º–∏\n`;
                } else {
                    infoMessage += `‚ùå –ù–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n`;
                }
                infoMessage += `\n`;
            }

            infoMessage += `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /removechannel –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏`;
        } else {
            infoMessage += `üì¢ *–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª:* –ù–µ—Ç\n\n`;
            infoMessage += `‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n`;
            infoMessage += `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setchannel –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏`;
        }

        return ctx.reply(infoMessage, { parse_mode: "Markdown" });
    });
}
