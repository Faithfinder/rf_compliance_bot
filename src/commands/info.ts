import { bot } from "../config/bot";
import {
    checkChannelRequirements,
    formatChannelRequirements,
    checkUserChannelPermissions,
    formatChannelInfo,
    escapeHtml,
} from "../utils";
import { getChannelSettings } from "../db/database";
import { isFixedChannelMode } from "../config/environment";

export function registerInfoCommand(): void {
    bot.command("info", async (ctx) => {
        const userId = ctx.from?.id;

        if (!userId || !ctx.from) {
            return ctx.reply("–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
        }

        const channelConfig = ctx.session.channelConfig;

        let infoMessage = "ü§ñ <b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞</b>\n\n";
        infoMessage += `üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> ${escapeHtml(ctx.from.first_name)}`;
        if (ctx.from.username) {
            infoMessage += ` (@${escapeHtml(ctx.from.username)})`;
        }
        infoMessage += `\nüì± <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> <code>${escapeHtml(String(userId))}</code>\n\n`;

        if (channelConfig) {
            infoMessage += `üì¢ <b>–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª:</b>\n`;
            infoMessage += `${formatChannelInfo(channelConfig.channelId, channelConfig.channelTitle)}\n`;
            if (isFixedChannelMode()) {
                infoMessage += `üîí –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)\n`;
            }
            infoMessage += `\n`;

            const requirements = await checkChannelRequirements(channelConfig.channelId);

            infoMessage += `üìã <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>\n`;
            infoMessage += `${formatChannelRequirements(requirements)}\n\n`;

            const channelSettings = getChannelSettings(channelConfig.channelId);

            if (channelSettings?.foreignAgentBlurb) {
                infoMessage += `‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞:</b>\n`;
                infoMessage += `üåç <b>–¢–µ–∫—Å—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞:</b>\n${escapeHtml(channelSettings.foreignAgentBlurb)}\n\n`;
            }

            const userPermissions = await checkUserChannelPermissions(channelConfig.channelId, userId);

            if (userPermissions) {
                infoMessage += `üë§ <b>–í–∞—à–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:</b>\n`;

                if (userPermissions.isMember) {
                    infoMessage += `‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞\n`;
                } else {
                    infoMessage += `‚ùå –ù–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞\n`;
                }

                if (userPermissions.isAdmin) {
                    infoMessage += `‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n`;
                    if (userPermissions.canPostMessages)
                        infoMessage += `‚ö†Ô∏è –ú–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–≠—Ç–æ –ø—Ä–∞–≤–æ —Å–ª–µ–¥—É–µ—Ç —É–±—Ä–∞—Ç—å, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –æ–±—Ö–æ–¥ –±–æ—Ç–∞)\n`;
                    if (userPermissions.canEditMessages) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n`;
                    if (userPermissions.canManageChat) infoMessage += `‚úÖ –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º\n`;
                } else {
                    infoMessage += `‚ùå –ù–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n`;
                }
                infoMessage += `\n`;
            }

            if (!isFixedChannelMode()) {
                infoMessage += `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/removechannel</code> –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏`;
            }
        } else {
            infoMessage += `üì¢ <b>–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª:</b> –ù–µ—Ç\n\n`;
            infoMessage += `‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n`;
            if (!isFixedChannelMode()) {
                infoMessage += `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/setchannel</code> –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏`;
            }
        }

        return ctx.reply(infoMessage, { parse_mode: "HTML" });
    });
}
